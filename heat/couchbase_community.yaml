heat_template_version: 2013-05-23

description: |
  Heat Template to deploy a Couchbase cluster

parameters:
  key_name:
    type: string
    default: my_key
  public_network:
    type: string
    default: external
  image_name:
    type: string
    default: rhel72
  flavor:
    type: string
    default: m1.small
  num_data_instances:
    type: number
    description: Number of Couchbase data node instances to create
    default: 2
  private_network_cidr:
    type: string
    label: CIDR
    description: The CIDR of the private network.
    default: '10.10.10.0/24'
  private_network_dns:
    type: comma_delimited_list
    label: DNS nameservers
    description: Comma separated list of DNS nameservers for the private network.
    default: '8.8.8.8'

resources:
  couchbase-network:
    type: OS::Neutron::Net

  couchbase-subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: couchbase-network }
      cidr: { get_param: private_network_cidr }
      dns_nameservers: { get_param: private_network_dns }

  router-couchbase:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_network }

  router-interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router-couchbase }
      subnet: { get_resource: couchbase-subnet }

  couchbase-sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: couchbase
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 1337
          port_range_max: 1337
        - protocol: tcp
          port_range_min: 8091
          port_range_max: 8093
        - protocol: any
          remote_group_id: { get_resource: couchbase-sg } 
          remote_mode: remote_group_id

  cb_cluster_master:
    type: OS::Nova::Server
    properties:
      name: couchbase-master
      image: { get_param: image_name }
      flavor: { get_param: flavor }
      key_name: {get_param: key_name }
      networks:
        - port: { get_resource: cb_cluster_master_port }
      user_data_format: RAW
      user_data: |
          #!/bin/bash -ex
          echo "Hello from couchbase-master Updated" > /tmp/server_hello

  cb_cluster_master_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: couchbase-network }
      security_groups:
        - { get_resource: couchbase-sg }

  cb_cluster_master_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_network }
      port_id: { get_resource: cb_cluster_master_port }

  cb_cluster_data_group:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: num_data_instances }
      resource_def:
         type: RH::Server::Couchbase
         properties:
           key_name: { get_param: key_name }
           image_name: { get_param: image_name }
           flavor: { get_param: flavor }
           public_network: { get_param: public_network }
           private_network: { get_resource: couchbase-network }

outputs:
  cb_cluster_master_floating_ip:
    description: Floating IP address of cb_cluster_master instance
    value: { get_attr: [cb_cluster_master_floating_ip, floating_ip_address ] }
  cb_cluster_master_private_ip:
    description: Private IP address of cb_cluster_master instance
    value: { get_attr: [cb_cluster_master, first_address ] }
  cb_cluster_data_group_floating_ips:
    description: Floating IP addresses for all of the data nodes
    value: { get_attr: [cb_cluster_data_group, cb_cluster_data_floating_ip] }
  cb_cluster_data_group_private_ips:
    description: Private IP addresses for all of the data nodes
    value: { get_attr: [cb_cluster_data_group, cb_cluster_data_private_ip] }
